#!groovy
pipeline {
    agent {
        node {
            label ''
            customWorkspace '/var/jenkins_home/jobs/robot-tests'
        }
    }
  stages {
    stage('Build') {
      steps {
        echo 'Run build'
      }
    }

    stage('Test 1') {
      steps {
        sh 'virtualenv .'
        sh 'bin/pip install robotframework robotframework-seleniumlibrary'
        // wrap([$class: 'Xvfb']) {
          timeout(time: 20, unit: 'MINUTES') {
            sh 'bin/robot test1.robot'
          }
        // }
      }
      post {
        always {
          stash includes: '*', name: 'test-1'
        }
      }
    }

    stage('Test 2') {
      steps {
        sh 'virtualenv .'
        sh 'bin/pip install robotframework robotframework-seleniumlibrary'
        // wrap([$class: 'Xvfb']) {
          timeout(time: 20, unit: 'MINUTES') {
            sh 'bin/robot test2.robot'
          }
        // }
      }
      post {
        always {
          stash includes: '*', name: 'test-2'
        }
      }
    }
  }

  post {
    always {

      unstash 'test-1'
      sh 'ls -al'
      sh 'cp output.xml test-1.xml'

      unstash 'test-2'
      sh 'ls -al'
      sh 'cp output.xml test-2.xml'

      // install robotframework
      sh 'virtualenv .'
      sh 'bin/pip install robotframework'

      // debug
      sh "ls *.xml"

      // merge reports
      sh 'bin/rebot --output output.xml *.xml || true'

      // publish reports
      step([
        $class: 'RobotPublisher',
        disableArchiveOutput: false,
        logFileName: 'log.html',
        onlyCritical: true,
        otherFiles: '**/*.png',
        outputFileName: 'output.xml',
        outputPath: '.',
        passThreshold: 100,
        reportFileName: 'report.html',
        unstableThreshold: 0
      ]);
    }
  } // post

}
